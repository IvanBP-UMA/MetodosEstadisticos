##############################################################
# M?todos estad?sticos para la computaci?n
# Escuela T?cnica Superior de Ingenier?a Inform?tica.
# Universidad de M?laga. Curso 2020 / 21
# Tema 5a. Variable aleatoria
##############################################################
library(tidyverse)
##############################################################
# Funci?n densidad de ejemplo
##############################################################
# Esto es la funci?n de densidad del ejemplo de las diapositivas
# Esta funci?n no es vectorial. No se le puede pasar un vector y que lo evalue de golpe.
# Como vamos a utilizar integrate necesitamos que la funci?n densidad que usemos sea vectorial.
# OJO: Tal cual est? NO nos vale.
densV0 <- function(x) {
if (x < 1)      0
else if (x < 2) x -1
else if (x < 3) 3 - x
else 0
}
# Con map podemos convertir cualquier funci?n de n?meros at?micos en una funci?n vectorial.
# Esta funci?n ya s? nos valdr?a.
densVv <- function(x) map_dbl(x, densV0)
# Pero es m?s eficiente hacerlo directamente utilizando la funci?n vectorial ifelse
# As? que utilizaremos esta versi?n.
# Es equivalente a la anterior densVv, pero usamos esta porque es m?s eficiente.
densV1 <- function(x) {
ifelse(x < 1, 0,
ifelse(x < 2, x -1,
ifelse(x < 3, 3 - x,
0)))
}
##############################################################
# Comprobaci?n de que su integral vale 1
##############################################################
# Esto tiene que dar 1
integrate(densV1, -Inf, Inf)
View(densV0)
View(densV0)
View(densV1)
View(densV1)
View(densVv)
View(densVv)
##############################################################
# Obtenci?n num?rica de la funci?n de distribuci?n
##############################################################
# OJO: Esto es s?lo una estimaci?n num?rica.
# OJO: Hay que saber calcular la funci?n de distribuci?n de manera algebr?ica.
# Esta funci?n recibe como argumento la funci?n de densidad y un valor x
# y devuelve el valor de la funci?n de distribuci?n F(x)
distV <- function(densV, x) {
integrate(densV, -Inf, x)$value
}
# Esto es m?s "estilo funcional"
# Recibe una funci?n densidad y devuelve una funci?n de distribuci?n.
# Ojo: as? definida no es una funci?n vectorial
distF <- function(densV) {
function(x) integrate(densV, -Inf, x)$value
}
# Ejemplo de uso.
distV(densV1, 2)
distV(densV1, 2.5)
# Metemos en distF1 la nueva funci?n
distF1 <- distF(densV1)
View(distF1)
View(distF1)
# La usamos todas las veces que queramos
distF1(2)
distF1(2.5)
integrate(densV1, 2.3, Inf)
integrate(densV1, 1.1, 1.7)
integrate(densV1, 1.5, 2.5)
##############################################################
# Esperanza matem?tica
##############################################################
# OJO: Es una estimaci?n num?rica. Hay peque?as variaciones de precisi?n
# Funciones de esperanza matem?tica discreta y continua
espMD <- function(x, p)  sum(x * p)
espMC <- function(densV) integrate(function(x) x * densV(x), -Inf, Inf)$value
# Ejemplo: lanzamiento de un dado
x <- 1:6
p <- rep(1/6, 6)
espMD(x, p)
# Esperanza del ejemplo densV1
espMC(densV1)
##############################################################
# Momentos ordinarios y centrales. Caso discreto y continuo
##############################################################
# OJO: Es una estimaci?n num?rica. Hay peque?as variaciones de precisi?n
# Variables discretas
mOrdD  <- function(x, p, n)  sum(x ^ n * p)
mCentD <- function(x, p, n)  sum((x - espMD(x, p)) ^ n * p)
# Variables continuas
mOrdC  <- function(densV, n) integrate(function(x) x ^ n * densV(x), -Inf, Inf)$value
mCentC <- function(densV, n) integrate(function(x) (x - espMC(densV)) ^ n * densV(x), -Inf, Inf)$value
# Ejemplo: C?lculo de la varianza discreta
# De las dos manera habituales, para ver que coinciden
mCentD(x, p, 2)
mOrdD(x, p, 2) - espMD(x, p) ^ 2
# Ejemplo: C?lculo de la varianza continua
# De las dos manera habituales, para ver que coinciden
mCentC(densV1, 2)
mOrdC(densV1, 2) - espMC(densV1) ^ 2
##############################################################
# C?lculo de cuantiles
##############################################################
# OJO: Es una estimaci?n num?rica. Hay peque?as variaciones de precisi?n
# Funci?n para calcular el cuantil de una variable continua
# Hay que pasarle un intervalo d?nde se estima que est? el resultado.
cuantilC <- function(densV, c, interv) {
uniroot(function (x) distV(densV, x) - c, interv)$root
}
# Mediana
cuantilC(densV1, .5, c(0, 5))
# Percentil 10
cuantilC(densV1, .1, c(0, 5))
##############################################################
# Ejercicio 5.1
##############################################################
# Apartado a
# Primero hay que calcular manualmente que a vale 1/3
# Alternativamente, podr?amos hacerlo en R, definiendo una funci?n que dependa del par?metro:
densParam <- function(a, x) {
ifelse(x < -1, 0,
ifelse(x <  0, 2 * a * (x+1),
ifelse(x <  2, a * (2 - x),
0)))
}
# Y otra que diga para cada par?metro cuanto se desvia la integral de 1
funcionObj <- function(a) integrate(function(x) densParam(a, x), -Inf, Inf)$value - 1
# Y ahora buscamos para qu? par?metro esa desviaci?n es 0
uniroot(funcionObj, c(-10, 10))
# Una vez que tenemos claro que el par?metro es 1/3:
densV51 <- function(x) {
ifelse(x < -1, 0,
ifelse(x <  0, 2/3 * (x+1),
ifelse(x <  2, 1/3 * (2 - x),
0)))
}
# Apartado b
# La funci?n de distribuci?n habr?a que calcularla anal?ticamente.
# Funci?n de distribuci?n num?rica:
distF51 <- distF(densV51)
# Representaci?n gr?fica
x <- seq(-2, 3, length.out = 101)
x
# Ojo, distf51 no es una funci?n vectorial, as? que necesitamos map para aplicarla a un vector
y <- map_dbl(x, distF51)
plot(x, y, type="l")
y
# Apartado c
# Esperanza matem?tica:
espMc(densV51)
##############################################################
# Esperanza matem?tica
##############################################################
# OJO: Es una estimaci?n num?rica. Hay peque?as variaciones de precisi?n
# Funciones de esperanza matem?tica discreta y continua
espMD <- function(x, p)  sum(x * p)
espMC <- function(densV) integrate(function(x) x * densV(x), -Inf, Inf)$value
# Apartado c
# Esperanza matem?tica:
espMc(densV51)
# Apartado c
# Esperanza matem?tica:
espMC(densV51)
# Mediana:
cuantilC(densV51, .5, c(-1, 2))
# Moda
x[which.max(densV51(x))]
# Apartado d
# Varianza:
var51 <- mCentC(densV51, 2)
var51
# Apartado e
# Coeficiente de asimetr?a
mCentC(densV51, 3) / var51^(3/2)
##############################################################
# M?todos estad?sticos para la computaci?n
# Escuela T?cnica Superior de Ingenier?a Inform?tica.
# Universidad de M?laga. Curso 2020 / 21
# Tema 5b. Distribuciones est?ndar
##############################################################
library(tidyverse)
##############################################################
# Distribuciones discretas
##############################################################
##############################################################
# Distribuci?n Uniforme discreta
##############################################################
# Generaci?n n?meros aleatorios uniforme discreta
# 600 tiradas de dados
xx <- sample(1:6, 600, replace=T)
# frecuencia
table(xx)
hist(xx)
##############################################################
# Distribuci?n Binomial
##############################################################
# Distribuci?n binomial
# Simulaci?n de 10000 tiradas de 10 monedas
# Cada elemento ser?a el n?mero de caras que ha salido en cada tirada
xx <- rbinom(10000, 10, .5)
# ?cuantas veces han salido 10 caras?
sum(xx == 10)
hist(xx)
# Funci?n de probabilidad
# Probabilidad de sacar 1 cara en 10 tiradas de monedas
dbinom(1, 10, .5)
# Probabilidad de sacar 5 caras en 10 tiradas de monedas
dbinom(5, 10, .5)
# Funci?n de distribuci?n
# Probabilidad de sacar 1 cara o menos
pbinom(1, 10, .5)
# Probabilidad de sacar 10 caras o menos. Tiene que valer 1.
pbinom(10, 10, .5)
#Ejemplo diapositiva 11
# Apartado 1
dbinom(2, 15, .02)
# Apartado 2
1 - pbinom(1, 15, .02)
1 - (dbinom(0, 15, .02) + dbinom(1, 15, .02))
pbinom(15, 15, .02) - pbinom(1, 15, .02)
# Apartado 3
dbinom(1, 4, .02)
# Ejemplo de dualidad
# Es lo mismo 3 ?xitos de 10 con prop = 0.7
dbinom(3, 10, .7)
# que 7 ?xitos de 10 con prop = 0.3
dbinom(7, 10, .3)
# Funci?n de distribuci?n
# Probabilidad de sacar 1 cara o menos
pbinom(1, 10, .5)
# Apartado 2
1 - pbinom(1, 15, .02)
##############################################################
# Distribuci?n de Poisson
##############################################################
# Probabilidad de 10 sucesos si la media es 10
dpois(10, 10)
# Probabilidad de 10 sucesos o menos si la media es 10
ppois(10, 10)
# Aqu? vemos que el 30% de las veces ocurren 8 sucesos o menos (si la media es 10)
qpois(.3, 10)
# Funci?n cuantil:
# Mediana
qbinom(.5, 10, .5)
# Percentil 10
qbinom(.1, 10, .5)
##############################################################
# Distribuci?n normal
##############################################################
# Simulamos 1000 sujetos de una poblaci?n de altura media 175 y desv 10
xx <- rnorm(1000, 175, 10)
min(xx)
max(xx)
xx %>% floor %>% table
# Representamos la densidad
x <- seq(140, 210, length.out=200)
y <- dnorm(x, 175, 10)
plot(x, y, type="l")
# ?Qu? proporci?n mide m?s de 185
1 - pnorm(185, 175, 10)
# el 10% m?s alto a partir de qu? altura est??
qnorm(.9, 175, 10)
# Simetr?a: Hay los mismo sujetos por debajo de 165, que por encima de 185
pnorm(165, 175, 10)
1 - pnorm(185, 175, 10)
# Individuos entre mu-sigma y mu+sigma
# Siempre hay 0.6827, independientemente de los valores de mu y sigma
pnorm(185, 175, 10) - pnorm(165, 175, 10)
pnorm(1) - pnorm(-1)
pnorm(1, 0, 1) - pnorm(-1, 0, 1)
# Simulaci?n para ver que sale algo parecido
xx <- rnorm(1000, 175, 10)
sum(between(xx, 165, 185)) / 1000
# 3 sigma
pnorm(205, 175, 10) - pnorm(145, 175, 10)
# 4 sigma
pnorm(215, 175, 10) - pnorm(135, 175, 10)
# ?Qu? proporci?n mide m?s de 185
1 - pnorm(185, 175, 10)
# el 10% m?s alto a partir de qu? altura est??
qnorm(.9, 175, 10)
# Simetr?a: Hay los mismo sujetos por debajo de 165, que por encima de 185
pnorm(165, 175, 10)
1 - pnorm(185, 175, 10)
# Individuos entre mu-sigma y mu+sigma
# Siempre hay 0.6827, independientemente de los valores de mu y sigma
pnorm(185, 175, 10) - pnorm(165, 175, 10)
pnorm(1) - pnorm(-1)
pnorm(1, 0, 1) - pnorm(-1, 0, 1)
# Probabilidad de sacar 10 caras o menos. Tiene que valer 1.
pbinom(10, 10, .5)
# es lo mismo que:
dbinom(0, 10, .5) + dbinom(1, 10, .5)
# ?Qu? proporci?n mide m?s de 185
1 - pnorm(185, 175, 10)
# Simetr?a: Hay los mismo sujetos por debajo de 165, que por encima de 185
pnorm(165, 175, 10)
1 - pnorm(185, 175, 10)
pnorm(32000, 32000, 4000/sqrt(50))
1-pnorm(14, 12, 4)
1-pnorm(14, 12, 4/3)
pnorm(0.025, 0, 1)
pnorm(0.975, 0, 1)
